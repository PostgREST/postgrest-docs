
PostgREST version 9.0
=====================

This mayor version is released following the PostgreSQL 14 launch and is accompanied with new features, improvements to functionality and bug fixes. Download the new version in the `PostgREST v9.0.0 release page <https://github.com/PostgREST/postgrest/releases>`_.

PostgreSQL 14 Compatibility
---------------------------

The latest PostgreSQL release tightened the GUC naming scheme making it impossible to use dots (``.``) and dashes (``-``). Thankfully, `@robertsosinski <https://github.com/robertsosinski>`_ got the PostgreSQL team to reconsider allowing dots in the GUC name, making it possible to avoid a breaking change. You can see the full discussion `here <https://www.postgresql.org/message-id/17045-6a4a9f0d1513f72b%40postgresql.org>`_.

Since dashes cannot be used on PostgreSQL 14, the GUC names are changed to the ones :ref:`mentioned in this section <guc_req_headers_cookies_claims>`. On older PostgreSQL versions we still use the :ref:`guc_legacy_names`. If you wish to use the new JSON GUCs on these versions, set the :ref:`db-use-legacy-gucs` config option to false.

Embedding on Partitioned Tables (and other features)
----------------------------------------------------

You can now confidently :ref:`embed partitioned tables <embedding_partitioned_tables>` with other tables; meanwhile, their partitions will stay hidden and won't interfere in the process. Likewise, other supported features for partitioned tables are: UPSERT, INSERT with Location response, OPTIONS request and OpenAPI support.

Dropping support for PostgreSQL 9.5
-----------------------------------

Due to the recent `end of life of PostgreSQL 9.6 <https://www.postgresql.org/support/versioning/>`_, we are dropping support for the next older version. Take into consideration that we are also planning on dropping the support for 9.6 in the next minor versions.

Other features
--------------

* Add ``Retry-After`` header when recovering the connection. See :ref:`automatic_recovery`.

* Allow calling a function with a :ref:`single unnamed parameter <s_proc_single_unnamed>` to POST raw ``json/jsonb``, ``bytea`` or ``text``.

* Allow escaping inside double quotes with a backslash, e.g. ``?col=in.("Double\"Quote")``, ``?col=in.("Back\\slash")``. See :ref:`reserved-chars`.

* Allow filtering top-level resource based on embedded resources filters. This is enabled by adding ``!inner`` to the embedded resource. See :ref:`embedding_top_level_filter`.

* Allow specifying ``unknown`` for the ``is`` :ref:`operator <operators>`.

* Improve error message for ambiguous embedding and add a relevant hint that includes unambiguous embedding suggestions.

Bug fixes
---------

* Fix OpenAPI missing default values for String types and identify Array types as "array" instead of "string"

* Fix RPC return type handling for RETURNS TABLE with a single column (regression of `#1615 <https://github.com/PostgREST/postgrest/pull/1615>`_).

* Fix using single double quotes (``"``) and backslashes (``/``) as values on the "in" operator

* Fix schema cache query failing with standard_conforming_strings = off

Incompatibilities
-----------------

* Partitions (created using ``PARTITION OF``) are no longer included in the :ref:`schema_cache`.

Documentation improvements
--------------------------

* Added :ref:`nested_embedding` to the :ref:`resource_embedding` section.

* Added the :ref:`templates` section to the :doc:`Ecosystem </ecosystem>`.

* Added the :ref:`logical_operators` section

Thanks
------

Thanks to the contributors who made this release possible!

* `@gautam1168 <https://github.com/gautam1168>`_
* `@laurenceisla <https://github.com/laurenceisla>`_
* `@monacoremo <https://github.com/monacoremo>`_
* `@robertsosinski <https://github.com/robertsosinski>`_
* `@steve-chavez <https://github.com/steve-chavez>`_
* `@wolfgangwalther <https://github.com/wolfgangwalther>`_

Big thanks from the `PostgREST team <https://github.com/orgs/PostgREST/people>`_ to our sponsors!

.. container:: image-container

  .. image:: ../_static/cybertec-new.png
    :target: https://www.cybertec-postgresql.com/en/?utm_source=postgrest.org&utm_medium=referral&utm_campaign=postgrest
    :width:  13em

  .. image:: ../_static/2ndquadrant.png
    :target: https://www.2ndquadrant.com/en/?utm_campaign=External%20Websites&utm_source=PostgREST&utm_medium=Logo
    :width:  13em

  .. image:: ../_static/retool.png
    :target: https://retool.com/?utm_source=sponsor&utm_campaign=postgrest
    :width:  13em

  .. image:: ../_static/gnuhost.png
    :target: https://gnuhost.eu/?utm_source=sponsor&utm_campaign=postgrest
    :width:  13em

  .. image:: ../_static/supabase.png
    :target: https://supabase.io/?utm_source=postgrest%20backers&utm_medium=open%20source%20partner&utm_campaign=postgrest%20backers%20github&utm_term=homepage
    :width:  13em

  .. image:: ../_static/oblivious.jpg
    :target: https://oblivious.ai/?utm_source=sponsor&utm_campaign=postgrest
    :width:  13em

* Evans Fernandes
* `Jan Sommer <https://github.com/nerfpops>`_
* `Franz Gusenbauer <https://www.igutech.at/>`_
* `Daniel Babiak <https://github.com/dbabiak>`_
* Tsingson Qin
* Michel Pelletier
* Jay Hannah
* Robert Stolarz
* Nicholas DiBiase
* Christopher Reid
* Nathan Bouscal
* Daniel Rafaj
* David Fenko
* Remo Rechkemmer
* Severin Ibarluzea
* Tom Saleeba
* Pawel Tyll

If you like to join them please consider `supporting PostgREST development <https://github.com/PostgREST/postgrest#user-content-supporting-development>`_.
