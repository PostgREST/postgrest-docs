
PostgREST 11.0.0
================

Features
--------

Resource Embedding Enhancements
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- There is a new spread operator ``...`` that is useful for:

  - Unnesting the embedded JSON object on a many-to-one or one-to-one relationship.
  - Including the columns of the intermediate table when resource embedding.
  - Disambiguating a recursive many-to-many embedding.
  - Disambiguating an embedding that has a many-to-many relationship with more than one foreign keys pointing to the same table.

  See :ref:`embed_unnest` and :ref:`hint_disamb`.

- The parent resource can also be filtered by using ``is.null`` or ``not.is.null`` on an embedded resource. This allows you to use:

  - ``is.null`` for anti joins, that is, selecting only the rows that do not have embedding.
  - ``not.is.null`` as a flexible replacement for ``!inner``.
  - both ``is.null`` and ``not.is.null`` inside the ``or`` operator.

  See :ref:`null_embed`.

- It is now possible to order the top level resource using the columns of the embedded resource. This works for
  :ref:`Many-to-One <many-to-one>` and :ref:`One-to-One <one-to-one>` relationships, e.g. ``/projects?select=*,clients(*)&order=clients(name).desc.nullsfirst``. See :ref:`top_level_order`.

- You can now exclude the embedded resource from the response by not selecting any embedded columns. This is useful when doing :ref:`top level filtering <embedding_top_level_filter>`, e.g. ``/films?actors!inner()``.

Replacing the OpenAPI Output
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This feature is no longer experimental and allows you to replace the :ref:`OpenAPI output <open-api>` with a PostgreSQL function specified in
:ref:`db-root-spec`.

ANY/ALL Comparison Operators
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Enhance row filtering with the new ``any`` and ``all`` :ref:`operators <operators>`, implementations of the
`ANY <https://www.postgresql.org/docs/current/functions-comparisons.html#id-1.5.8.30.16>`_ and `ALL <https://www.postgresql.org/docs/current/functions-comparisons.html#id-1.5.8.30.17>`_ constructs.
Use them as modifiers of the ``eq,like,ilike,gt,gte,lt,lte,match,imatch`` filters, e.g. ``/people?name=like(all).{J*,*e}``.

IS DISTINCT FROM
~~~~~~~~~~~~~~~~

The new ``isdistinct`` :ref:`operator <operators>` works in the same way as ``neq`` but it includes ``NULL`` values in the comparison.
It is a direct implementation of the `IS DINTINCT FROM <https://www.postgresql.org/docs/current/functions-comparison.html#FUNCTIONS-COMPARISON-PRED-TABLE>`_
predicate.

Debugging
~~~~~~~~~

Added :ref:`server-trace-header`. When this header is sent in the request, then the response will also include it.

DEFAULT Values in Bulk Inserts
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:ref:`Bulk inserts <bulk_insert>` can now use the ``DEFAULT`` value of the column when it is missing in the payload with the new ``Prefer: missing=default`` header.

Documentation improvements
~~~~~~~~~~~~~~~~~~~~~~~~~~

Breaking changes
----------------

Bug fixes
---------

Thanks
------

Big thanks from the `PostgREST team <https://github.com/orgs/PostgREST/people>`_ to our sponsors!

.. container:: image-container

  .. image:: ../_static/cybertec-new.png
    :target: https://www.cybertec-postgresql.com/en/?utm_source=postgrest.org&utm_medium=referral&utm_campaign=postgrest
    :width:  13em

  .. image:: ../_static/2ndquadrant.png
    :target: https://www.2ndquadrant.com/en/?utm_campaign=External%20Websites&utm_source=PostgREST&utm_medium=Logo
    :width:  13em

  .. image:: ../_static/retool.png
    :target: https://retool.com/?utm_source=sponsor&utm_campaign=postgrest
    :width:  13em

  .. image:: ../_static/gnuhost.png
    :target: https://gnuhost.eu/?utm_source=sponsor&utm_campaign=postgrest
    :width:  13em

  .. image:: ../_static/supabase.png
    :target: https://supabase.com/?utm_source=postgrest%20backers&utm_medium=open%20source%20partner&utm_campaign=postgrest%20backers%20github&utm_term=homepage
    :width:  13em

  .. image:: ../_static/oblivious.jpg
    :target: https://oblivious.ai/?utm_source=sponsor&utm_campaign=postgrest
    :width:  13em

* Evans Fernandes
* `Jan Sommer <https://github.com/nerfpops>`_
* `Franz Gusenbauer <https://www.igutech.at/>`_
* `Daniel Babiak <https://github.com/dbabiak>`_
* Tsingson Qin
* Michel Pelletier
* Jay Hannah
* Robert Stolarz
* Nicholas DiBiase
* Christopher Reid
* Nathan Bouscal
* Daniel Rafaj
* David Fenko
* Remo Rechkemmer
* Severin Ibarluzea
* Tom Saleeba
* Pawel Tyll

If you like to join them please consider `supporting PostgREST development <https://github.com/PostgREST/postgrest#user-content-supporting-development>`_.
